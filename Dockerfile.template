FROM balenalib/%%BALENA_MACHINE_NAME%%

ENV container docker
# Install other apt deps
RUN apt-get update && apt-get install -y --no-install-recommends \
  apt-utils \
  curl \
  dbus \
  wget \
  xserver-xorg-core \
  xserver-xorg-legacy \
  xserver-xorg-input-all \
  xserver-xorg-video-fbdev \
  x11-xserver-utils \
  xorg \
  chromium-browser \
  libxcb-image0 \
  libxcb-util0 \
  xdg-utils \
  libdbus-1-dev \
  libcap-dev \
  libxtst-dev \
  libxss1 \
  lsb-release \
  fbset \
  systemd-sysv \
  cron \
  xdotool \
  matchbox-window-manager \
  nitrogen \
  libexpat-dev && rm -rf /var/lib/apt/lists/*

RUN echo "#!/bin/bash" > /etc/X11/xinit/xserverrc \
  && echo "" >> /etc/X11/xinit/xserverrc \
  && echo 'exec /usr/bin/X -s 0 dpms -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc


###&& echo 'exec /usr/bin/X -s 0 dpms -nocursor -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc
#### advised by balena to add the below for fixing local input issues

RUN systemctl mask \
    dev-hugepages.mount \
    sys-fs-fuse-connections.mount \
    sys-kernel-config.mount \

    display-manager.service \
    getty@.service \
    systemd-logind.service \
    systemd-remount-fs.service \

    getty.target \
    graphical.target


COPY entry.sh /usr/bin/entry.sh
COPY balena.service /etc/systemd/system/balena.service

RUN systemctl enable /etc/systemd/system/balena.service

STOPSIGNAL 37
#VOLUME ["/sys/fs/cgroup"]
ENTRYPOINT ["/usr/bin/entry.sh"]

####

# Move to app dir
WORKDIR /usr/src/app

# Move app to filesystem
COPY ./app ./

## uncomment if you want systemd
ENV INITSYSTEM on

COPY . /usr/src/app/
WORKDIR /usr/src/app


RUN echo "DISPLAY=:0.0"

RUN echo "# ┌───────────── minute (0 - 59)"  | crontab
RUN echo "# │ ┌───────────── hour (0 - 23)" | crontab
RUN echo "# │ │ ┌───────────── day of month (1 - 31)" | crontab
RUN echo "# │ │ │ ┌───────────── month (1 - 12)" | crontab
RUN echo "# │ │ │ │ ┌───────────── day of week (0 - 6) (Sunday to Saturday;" | crontab
RUN echo "# │ │ │ │ │                                       7 is also Sunday on some systems)" | crontab
RUN echo "# │ │ │ │ │" | crontab
RUN echo "# │ │ │ │ │" | crontab
RUN echo "# * * * * *  command to execute" | crontab

RUN echo "# Reboot the Pi every night at 3 AM to ensure smooth operation" | crontab
RUN echo "0 3 * * * sudo reboot" | crontab

RUN echo "# Example: Turn display on weekdays at 7 AM" | crontab
RUN echo "# 0 7 * * 1-5 ~/display-on.sh" | crontab

RUN echo "# Example: Turn display off weekdays at 7 PM (and after the nightly reboot)" | crontab
RUN echo "# 0 19 * * 1-5 ~/display-off.sh" | crontab
RUN echo "# 10 3 * * 1-5 ~/display-off.sh" | crontab

RUN echo "# Example: Reload webpage every hour" | crontab
RUN echo "# 0 * * * * xdotool key ctrl+R" | crontab

RUN echo "# Example: Cycle between open tabs every 5 minutes" | crontab
RUN echo "# */5 * * * * xdotool key ctrl+Tab" | crontab




CMD ["/bin/bash", "start.sh"]


# Start app
CMD ["bash", "/usr/src/app/start.sh"]
